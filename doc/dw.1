.\" Automatically generated by Pandoc 2.9.2.1
.\"
.TH "DECONWOLF" "1" "2022" "dw 0.3.8" ""
.hy
.SH NAME
.PP
deconwolf \f[B]dw\f[R] is a tool for deconvolution of wide field
microscopy stacks.
.SH SYNOPSIS
.PP
For deconvolution:
.PP
\f[B]dw\f[R] [\f[I]OPTIONS\f[R]] file.tif psf.tif
.PP
or, for max projections over z:
.PP
\f[B]dw\f[R] maxproj file1.tif file1.tif \&...
.SH OPTIONS
.TP
\f[B]--threads t\f[R]
Set the number of computational threads to use.
.TP
\f[B]--out file.tif\f[R]
Explicitly set the name of the output file.
By default the output file name is the name of the input file prefixed
by \f[C]dw_\f[R].
.TP
\f[B]--prefix str\f[R]
Set the prefix to use for the output file.
An extra \f[C]_\f[R] will be appended to the str.
.TP
\f[B]--iterdump\f[R]
Save each iteration to disk, not only the final.
.TP
\f[B]--niterdump n\f[R]
Save every nth iteration to disk, including the final image.
.TP
\f[B]--iter n\f[R]
Set the number of fixed iterations.
.TP
\f[B]--relerror r\f[R]
Tell \f[B]dw\f[R] to stop when the relative error between to iterations
is below \f[B]r\f[R].
This can be combined with \f[B]--maxiter\f[R] to set a limit on the
number of iterations to perform.
.TP
\f[B]--abserror e\f[R]
Tell \f[B]dw\f[R] to stop when an absolute error is reached.
This can be combined with \f[B]--maxiter\f[R] to set a limit on the
number of iterations to perform.
.TP
\f[B]--maxiter m\f[R]
If a relative or abolute error is used as stopping criteria, this limits
the number of iterations to perform.
.TP
\f[B]--tilesize s\f[R]
Set the size (axial side length, in pixels) of the largest portion that
can be deconvolved at a time.
E.g., if s is 2048 any image larger than 2048 will be deconvolved in
tiles.
See separate section on tiling below.
.TP
\f[B]--tilepad p\f[R]
Set how many pixels the tiles should overlap.
See separate section on tiling below.
.TP
\f[B]--overwrite\f[R]
Overwrite the target if it exists.
.TP
\f[B]--bq n\f[R]
Border/edge handling.
n=0: no padding.
n=1: a compromise between memory/speed and quality.
n=2 default.
.TP
\f[B]--offset v\f[R]
Add a positive number, \f[I]v\f[R], to the image before processing, and
then remove it before saving to disk.
This can make the RL algorithm less sensitive to non-Poissonian noise
(from the detector).
A value close the standard deviation of the detector noise seems
reasonable.
.TP
\f[B]--float\f[R]
Save the output using 32-bit floats, also turns off any scaling.
Please note that without this flag, images will be saved as 16-bit
unsigned integers and will be scaled to make most use of that format,
see the log files for scaling factor used.
.TP
\f[B]--scaling s\f[R]
Disable automatic scaling of the output image.
Instead use the value \f[B]s\f[R].
This is only valid in the default, 16-bit output mode.
This option is useful when it is not an option to parse the log files
and re-scale the image intensities after opening them.
Potential risks: A too large scaling value which will cause the high
values to be clipped.
A too low value will eventually cause discretization artifacts.
.TP
\f[B]--version\f[R], \f[B]-V\f[R]
Show version information and quit.
.TP
\f[B]--help\f[R]
Show a short help message and quit.
.TP
\f[B]--method METHOD\f[R]
Select what method to use.
Valid options are i/ \f[B]id\f[R] identity transform, i.e.\ nothing.
Useful to see if images loads, scales and saves correctly.
ii/ \f[B]rl\f[R] classical Richardson-Lucy.
.PP
iii/ \f[B]shbcl2\f[R] Scaled Heavy Ball using OpenCl (not compiled by
default)
.PP
iii/ \f[B]shb\f[R] Scaled Heavy Ball.
iv/ \f[B]shbcl2\f[R] Scaled Heavy Ball using OpenCl (not compiled by
default)
.TP
\f[B]--gpu\f[R]
same as **\[en]method shbcl2*.
.TP
\f[B]--mse\f[R]
Show the Mean Square Error between the input image and the current guess
convolved with the PSF at each iteration.
If not set, I-divergence is shown.
.TP
\f[B]--psigma s\f[R]
Pre-process the image and the PSF by convolving it by a 3-D isotropic
Gaussian with sigma=s.
The Anscombe transform is applied before the filtering, and inverted
afterwards.
\f[I]s\f[R]\[u2004]=\[u2004]0 means that this feature is disabled which
is the default.
Note that that less noise allows more iterations before.
.PP
Example: For the microtubules image \f[I]s\f[R]\[u2004]=\[u2004]0.7 and
150 iterations was found to produce the lowest MSE compared to the
ground truth image.
.TP
\f[B]--start_id\f[R]
Use the input image as the initial guess.
Possibly good if only a few iterations are to be used.
Can cause adverse results when many iterations are used.
.TP
\f[B]--start_flat\f[R]
Use the mean of the input image as the initial guess.
This was the result up to version 0.3.7.
.TP
\f[B]--noplan\f[R]
disable FFTW3 planning.
This means that FFTW3 uses the default plan for the given problem size.
.TP
\f[B]maxproj\f[R]
With \f[I]maxproj\f[R] as the first argument deconwolf will create max
projections of all following tif files.
Output will be prefixed with \f[C]max_\f[R].
.SH While running
.PP
At normal verbosity deconwolf will put one green dot per FFT.
After each iteration the Idiv or MSE (with \f[B]--mse\f[R]) is shown,
not that this is not a measurement on the final image quality.
Warnings are prefixed with \[cq] ! \[cq].
More information can be found in the log file.
.SH INPUT
.PP
\f[B]dw\f[R] reads 16-bit (unsigned integers) or 32-bit (floating point)
tif files.
It does not understand compressed files or any dimensions except x,y,z,
so only one color per image etc.
To test if \f[B]dw\f[R] reads and writes your files, try the
\f[B]--method id\f[R] option.
In general, if an image is saved by ImageJ dw should be able to read it.
.SH OUTPUT
.PP
Without specifying the output file name, the output file will be
prefixed with \f[C]dw_\f[R], e.g, if you deconvolve \f[C]file.tif\f[R]
the output file will be called \f[C]dw_file.tif\f[R].
Please pay attention to the log file that also will be created (as
\f[C]dw_file.tif.log.txt\f[R]).
.PP
Unless \f[B]--float\f[R] was specified the output images will be scaled
to use the full dynamic range of the 16 bit format.
The scaling factor can be found in the log file.
.PP
To use a consistent scaling with 16-bit output, use the
\f[B]--scaling\f[R] option.
.SH PERFORMANCE
.PP
Without specifying any arguments to \f[B]dw\f[R] it will use one thread
per cpu core in the host machine.
This is typically the fastest way to deconvolve one image.
For maximal throughput it is better to run several copies of
\f[B]dw\f[R] using fewer cores each.
E.g.
on an 8-core machine the maximal throughput can be reached by
deconvolving eight images in parallel using one core each (if enough RAM
is available).
.SH Tiling
.PP
In order to use less RAM and deconvolve really large scans deconwolf can
process images in a memory efficient way by dividing them into smaller
portions, or tiles.
This process is completely transparent to the user although the
\f[B]\[en]tilesize T\f[R] parameter has to be set explicitly.
.PP
Tile processing would typically be slow and introduce artifacts at the
boundaries.
To reduce the boundary artifacts tiles are overlapped by up to
\f[B]\[en]tilepad p\f[R] pixels.
This artifact remedy does, unfortunately, slow down the processing even
more.
.PP
Internally the tile processing performs the following steps:
.IP "1." 3
The tif input image is written to disk as raw float data, without
loading the full image to RAM.
.IP "2." 3
A tiling grid is set up which divides the lateral domain of the image
into tiles of size at most \f[I]T\f[R]\f[I]x\f[R]\f[I]T\f[R].
.IP "3." 3
Each tile then is loaded from disk, including extra padding \f[I]p\f[R]
where it isn\[cq]t in contact with the edge.
The tile is then deconvolved and the data is written to disk.
.IP "4." 3
Where the padding is overlapping another tile, the image data is
weighted linearly to reduce artifacts.
.IP "5." 3
The raw output images is converted to tif, again without loading the
full image to RAM.
.PP
Tiling is enabled only when \f[B]\[en]tilesize\f[R] is specified.
.SH SEE ALSO
.PP
\f[B]dw_bw\f[R] for generation of point spread functions according to
the Born-Wolf model.
.SH WEB PAGE
.PP
<https://github.com/elgw/deconwolf/>
.SH REPORTING BUGS
.PP
Please report bugs at <https://github.com/elgw/deconwolf/issues/>
.SH COPYRIGHT
.PP
Copyright \[co] 2022 Erik Wernersson.
License GPLv3+: GNU GPL version 3 or later
<https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
.SH AUTHORS
Erik Wernersson.
